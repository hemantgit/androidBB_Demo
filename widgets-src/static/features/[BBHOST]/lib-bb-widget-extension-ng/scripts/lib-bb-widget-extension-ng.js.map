{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6***********","webpack:///webpack/bootstrap 2990f54522f565c4fd41?4c34***********","webpack:///./lib-bb-widget-extension-ng/model.xml","webpack:///external \"lib-bb-widget-ng\"?84ad","webpack:///./lib-bb-widget-extension-ng/scripts/index.js","webpack:///./lib-bb-widget-extension-ng/scripts/widget-extension.js"],"names":["extensionHooksKey","defaultHooks","extensionHooks","widget","context","Object","assign"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,0C;;;;;;;ACAA,iD;;;;;;;;;;;;;;AC6BA;;AAEA;;;;;;AAEA;;;;;;AAjCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCO,KAAMA,gDAAoB,kBAA1B;;AAEP;;;;;;;;;;mBASe,UAACC,YAAD;AAAA,UAAkB,CAC/BD,iBAD+B;AAG/B;AACA,aAACE,cAAD,EAAiBC,MAAjB;AAAA,YAA4B,+BAAgBF,YAAhB,EAA8BC,cAA9B,EAA8C;AACxEC;AADwE,MAA9C,CAA5B;AAAA,IAJ+B,CAAlB;AAAA,E;;;;;;;;;;;;;AClDf;;;;;;;;mBAQe,UAACF,YAAD,EAAeC,cAAf,EAA+BE,OAA/B;AAAA,UACbC,OAAOC,MAAP,CACE,EADF,EACML,YADN,EAEG,OAAOC,cAAP,KAA0B,UAA3B,GAAyCA,eAAeE,OAAf,CAAzC,GAAmEF,cAFrE,CADa;AAAA,E;;AAKf;;;;;AAKA;;;;;;;AAOA","file":"lib-bb-widget-extension-ng/scripts/lib-bb-widget-extension-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lib-bb-widget-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lib-bb-widget-extension-ng\", [\"lib-bb-widget-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lib-bb-widget-extension-ng\"] = factory(require(\"lib-bb-widget-ng\"));\n\telse\n\t\troot[\"lib-bb-widget-extension-ng\"] = factory(root[\"lib-bb-widget-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_19__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2990f54522f565c4fd41","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib-bb-widget-extension-ng/model.xml\n// module id = 0\n// module chunks = 12","module.exports = __WEBPACK_EXTERNAL_MODULE_19__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 19\n// module chunks = 8 12","/**\n * @module lib-bb-widget-extension-ng\n *\n * @description\n * Provides a helper function that creates an angular injectable, which works in conjunction\n * with `lib-bb-start-ng` to:\n *  1. merge the custom hooks from the widgets extension with the defaults provided by the widget.\n *  2. provide the hooks with limited access to contextually useful services.\n *\n * Extensible widgets should use this library to create hooks that can be consumed by a widget\n * extension.\n *\n * @example\n * // extension exports hooks, file: ext-bb-example-ng/scripts/index.js\n *\n * export const hooks = ({ widget }) => ({\n *   prepareData: (data) => widget.getPreference('reverse') ? data.reverse() : data,\n * });\n *\n * // widget consumes extension hook implementation, file: widget-bb-example-ng/scripts/index.js\n * import extendHooks from 'lib-bb-widget-extension-ng';\n *\n * import * as defaultHooks from './default-hooks';\n *\n * angular.module(...)\n *   .factory('my-widget:hooks', extendHooks(defaultHooks));\n *\n */\n\nimport { widgetKey } from 'lib-bb-widget-ng';\n\nimport widgetExtension from './widget-extension';\n\n/**\n * @name extensionHooksKey\n * @type {string}\n * @description\n * The injector key to be used to access the extension hooks module\n */\nexport const extensionHooksKey = 'widget-ext:hooks';\n\n/**\n * @name default\n * @type {function}\n * @description\n * Create an angular injectable to help merge the widgets extension hooks with the default hooks\n * provided by the widget.\n * @param {Hooks} defaultHooks The default hook implementation\n * @returns {NgInjectedFunction}\n */\nexport default (defaultHooks) => [\n  extensionHooksKey,\n  widgetKey,\n  /* into */\n  (extensionHooks, widget) => widgetExtension(defaultHooks, extensionHooks, {\n    widget,\n  }),\n];\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-widget-extension-ng/scripts/index.js","/**\n * @private\n * Extend the default hooks with the hooks from the extension module.\n *\n * @param {Hooks} defaultHooks The default hook implementations\n * @param {Hooks|HooksFactory} extensionHooks The hooks to override\n * @param {HooksContext} context Additional context that may be useful for the hooks implementations\n */\nexport default (defaultHooks, extensionHooks, context) =>\n  Object.assign(\n    {}, defaultHooks,\n    (typeof extensionHooks === 'function') ? extensionHooks(context) : extensionHooks);\n\n/**\n * @typedef Hooks\n * @type {object.<function>}\n */\n\n/**\n * @typedef HooksFactory\n * @type {function}\n * @param {HooksContext} context\n * @returns {Hooks}\n */\n\n/**\n * @typedef HooksContext\n * @type {object}\n * @property {module:lib-bb-widget-ng.widget} widget\n */\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-widget-extension-ng/scripts/widget-extension.js"],"sourceRoot":""}