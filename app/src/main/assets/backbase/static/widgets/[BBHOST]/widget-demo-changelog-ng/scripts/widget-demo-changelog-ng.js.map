{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6******","webpack:///webpack/bootstrap 7d1cba94add1f4ddefb8?6d4a******","webpack:///./widget-demo-changelog-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114","webpack:///external \"lib-bb-widget-ng\"?84ad","webpack:///external \"lib-bb-event-bus-ng\"?8215","webpack:///external \"lib-bb-widget-extension-ng\"?b547","webpack:///./widget-demo-changelog-ng/scripts/index.js","webpack:///./widget-demo-changelog-ng/scripts/controller.js","webpack:///./widget-demo-changelog-ng/scripts/default-hooks.js"],"names":["moduleKey","hooksKey","module","factory","controller","run","bus","widget","name","ChangelogController","hooks","$http","$ctrl","storage","cxp","mobile","plugins","InMemoryStorage","$onInit","source","getPreference","replace","get","window","b$","portal","config","resourceRoot","success","data","changelog","publish","id","getId","versionClicked","versionIndex","setItem","JSON","stringify","Object","assign","identity","a"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,0C;;;;;;;ACAA,iD;;;;;;;ACAA,iD;;;;;;;ACAA,iD;;;;;;;ACAA,iD;;;;;;;;;;;;;ACMA;;;;AAEA;;;;AACA;;;;AAIA;;;;AAEA;;;;AACA;;;;;;AAhBA;;;;;;AAkBA,KAAMA,YAAY,0BAAlB;AACA,KAAMC,WAAcD,SAAd,WAAN;;mBAEe,0BACZE,MADY,CACLF,SADK,EACM,oDADN,EAOZG,OAPY,CAOJF,QAPI,EAOM,6DAPN,EASZG,UATY,CASD,qBATC,EASsB;AACjC;AADiC,+BAGjCH,QAHiC,4BAKjC,OALiC;;AAOjC;AAPiC,sBATtB,EAoBZI,GApBY,CAoBR,yDAAyB,UAACC,GAAD,EAAMC,MAAN,EAAiB,CAC9C,CADI,CApBQ,EAuBZC,I;;;;;;;;;;;;mBCpCqBC,mB;AARxB;;;;;;;;AAQe,UAASA,mBAAT,CAA6BH,GAA7B,EAAkCI,KAAlC,EAAyCH,MAAzC,EAAiDI,KAAjD,EAAwD;AACrE,OAAMC,QAAQ,IAAd;AACA,OAAMC,UAAUC,IAAIC,MAAJ,CAAWC,OAAX,CAAmBC,eAAnC;;AAEA;;;;;;AAMA,OAAMC,UAAU,SAAVA,OAAU,GAAM;AACpB;AACA,SAAIC,SAASZ,OAAOa,aAAP,CAAqB,YAArB,EAAmCC,OAAnC,CAA2C,gBAA3C,EAA6D,EAA7D,CAAb;;AAEA;AACAV,WAAMW,GAAN,CAAUC,OAAOC,EAAP,CAAUC,MAAV,CAAiBC,MAAjB,CAAwBC,YAAxB,GAAuCR,MAAjD,EACGS,OADH,CACW,UAAUC,IAAV,EAAgB;AACvBjB,aAAMkB,SAAN,GAAkBD,IAAlB;AACD,MAHH;;AAKAvB,SAAIyB,OAAJ,CAAY,gBAAZ,EAA8B;AAC5BC,WAAIzB,OAAO0B,KAAP;AADwB,MAA9B;;AAIA;AACA3B,SAAIyB,OAAJ,CAAY,kBAAZ;AACD,IAhBD;;AAkBA;AACA,OAAMG,iBAAiB,SAAjBA,cAAiB,CAACC,YAAD,EAAkB;;AAEvC;AACA;;AAEA,SAAItB,OAAJ,EAAa;AACXA,eAAQuB,OAAR,CAAgB,IAAhB,EAAsB,IAAtB,EAA4B,gBAA5B,EAA8CC,KAAKC,SAAL,CAAe1B,MAAMkB,SAAN,CAAgBK,YAAhB,CAAf,CAA9C;AACD;;AAED;AACA7B,SAAIyB,OAAJ,CAAY,gBAAZ,EAA8B;AAC5BI,qBAAcA;AADc,MAA9B;AAGD,IAbD;;AAeAI,UAAOC,MAAP,CAAc5B,KAAd,EAAqB;AACnBM,qBADmB;AAEnBgB;;AAFmB,IAArB;AAKD,E;;;;;;;;;;;;;ACxDD,KAAMO,WAAW,SAAXA,QAAW;AAAA,UAAKC,CAAL;AAAA,EAAjB;;mBAEe,E","file":"widget-demo-changelog-ng/scripts/widget-demo-changelog-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-demo-changelog-ng\", [\"vendor-bb-angular\", \"lib-bb-widget-ng\", \"lib-bb-event-bus-ng\", \"lib-bb-widget-extension-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-demo-changelog-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"));\n\telse\n\t\troot[\"widget-demo-changelog-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-widget-extension-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_23__, __WEBPACK_EXTERNAL_MODULE_24__, __WEBPACK_EXTERNAL_MODULE_25__, __WEBPACK_EXTERNAL_MODULE_27__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7d1cba94add1f4ddefb8","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-demo-changelog-ng/model.xml\n// module id = 0\n// module chunks = 7","module.exports = __WEBPACK_EXTERNAL_MODULE_23__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 23\n// module chunks = 6 7 8 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_24__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 24\n// module chunks = 6 7 8 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_25__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 25\n// module chunks = 6 7 8 9 10 11","module.exports = __WEBPACK_EXTERNAL_MODULE_27__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 27\n// module chunks = 6 7 8 9 10 11","/**\n * @module widget-demo-changelog-ng\n *\n * @description\n * Changelog\n */\nimport angular from 'vendor-bb-angular';\n\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\n\n\n\nimport Controller from './controller';\n\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport defaultHooks from './default-hooks';\n\nconst moduleKey = 'widget-demo-changelog-ng';\nconst hooksKey = `${moduleKey}:hooks`;\n\nexport default angular\n  .module(moduleKey, [\n    widgetModuleKey,\n    eventBusModuleKey,\n\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .controller('ChangelogController', [\n    // dependencies to inject\n    eventBusKey,\n    hooksKey,\n    widgetKey,\n    '$http',\n\n    /* into */\n    Controller,\n  ])\n\n  .run([eventBusKey, widgetKey, (bus, widget) => {\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-demo-changelog-ng/scripts/index.js","/**\n * @module widget-demo-changelog-ng\n * @name ChangelogController\n *\n * @description\n * Changelog\n */\n\nexport default function ChangelogController(bus, hooks, widget, $http) {\n  const $ctrl = this;\n  const storage = cxp.mobile.plugins.InMemoryStorage;\n\n  /**\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @name ChangelogController#$onInit\n   * @returns {void}\n   */\n  const $onInit = () => {\n    // Workaround for desktop environment - $(contextRoot) will not be replace automatically\n    var source = widget.getPreference('dataSource').replace(\"$(contextRoot)\", \"\");\n\n    // Get content from a JSON file\n    $http.get(window.b$.portal.config.resourceRoot + source)\n      .success(function (data) {\n        $ctrl.changelog = data;\n      });\n\n    bus.publish('bb.item.loaded', {\n      id: widget.getId(),\n    });\n\n    // This widget needs to request the version widget to be preloaded using Preload on Demand\n    bus.publish('changelog-loaded');\n  };\n\n  // Attach version tapped event handler\n  const versionClicked = (versionIndex) => {\n\n    // Store the requested version so the version widget can pick it up (needed when the version widget is not preloaded)\n    //widget.preferences.setItem('versionClicked', versionIndex);\n\n    if (storage) {\n      storage.setItem(null, null, 'versionClicked', JSON.stringify($ctrl.changelog[versionIndex]));\n    }\n\n    // Inform the native app template that it should show the version widget (via the behaviour mapping), and potentially inform the preloaded version widget that it should show the particular selected version\n    bus.publish('versionClicked', {\n      versionIndex: versionIndex\n    });\n  };\n\n  Object.assign($ctrl, {\n    $onInit,\n    versionClicked,\n\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-demo-changelog-ng/scripts/controller.js","\nconst identity = a => a;\n\nexport default {\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-demo-changelog-ng/scripts/default-hooks.js"],"sourceRoot":""}